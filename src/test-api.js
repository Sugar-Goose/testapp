// –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API
import { 
  registerUser, 
  setupTwoFactorAuth, 
  verifyTwoFactorAuth, 
  loginUser,
  setAuthToken,
  getAuthToken 
} from './api.js'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
export async function testRegistration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...')
  try {
    const result = await registerUser('test@example.com', 'TestPassword123')
    console.log('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', result)
    return result
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error.message)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ 2FA
export async function testSetup2FA() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ 2FA...')
  try {
    const result = await setupTwoFactorAuth()
    console.log('‚úÖ 2FA –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å–ø–µ—à–Ω–∞:', result)
    return result
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ 2FA:', error.message)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ 2FA
export async function testVerify2FA(token) {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ 2FA...')
  try {
    const result = await verifyTwoFactorAuth(token)
    console.log('‚úÖ 2FA –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', result)
    return result
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ 2FA:', error.message)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞
export async function testLogin(email, password, twoFactorCode) {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞...')
  try {
    const result = await loginUser(email, password, twoFactorCode)
    console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω:', result)
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
    if (result.token) {
      setAuthToken(result.token)
      console.log('üíæ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
    }
    
    return result
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error.message)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞–º–∏
export function testTokenManagement() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞–º–∏...')
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω
  const currentToken = getAuthToken()
  console.log('üìã –¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω:', currentToken ? '–ï—Å—Ç—å' : '–ù–µ—Ç')
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω
  setAuthToken('test-token-123')
  console.log('üíæ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω —Å–Ω–æ–≤–∞
  const newToken = getAuthToken()
  console.log('üìã –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω:', newToken)
  
  // –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω
  setAuthToken(null)
  console.log('üóëÔ∏è –¢–æ–∫–µ–Ω –æ—á–∏—â–µ–Ω')
  
  const clearedToken = getAuthToken()
  console.log('üìã –¢–æ–∫–µ–Ω –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:', clearedToken ? '–ï—Å—Ç—å' : '–ù–µ—Ç')
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export async function runFullTest() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API...')
  
  try {
    // –¢–µ—Å—Ç 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    await testRegistration()
    
         // –¢–µ—Å—Ç 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ 2FA
     // eslint-disable-next-line no-unused-vars
     const twoFactorResult = await testSetup2FA()
    
    // –¢–µ—Å—Ç 3: –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è 2FA (—Å —Ç–µ—Å—Ç–æ–≤—ã–º –∫–æ–¥–æ–º)
    await testVerify2FA('123456')
    
    // –¢–µ—Å—Ç 4: –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
    await testLogin('test@example.com', 'TestPassword123', '123456')
    
    // –¢–µ—Å—Ç 5: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏
    testTokenManagement()
    
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
  } catch (error) {
    console.error('üí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏:', error.message)
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
if (typeof window !== 'undefined') {
  window.testAPI = {
    testRegistration,
    testSetup2FA,
    testVerify2FA,
    testLogin,
    testTokenManagement,
    runFullTest
  }
  
  console.log('üß™ API —Ç–µ—Å—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.testAPI')
  console.log('–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: window.testAPI.runFullTest()')
}
